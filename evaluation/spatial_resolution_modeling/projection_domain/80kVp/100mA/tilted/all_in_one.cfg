# Phantom
phantom.callback = "Phantom_Analytic"      # name of function that reads and models phantom
phantom.projectorCallback = "C_Projector_Analytic" # name of function that performs projection through phantom
phantom.filename = 'wire.ppm'       # phantom filename
phantom.centerOffset = [211.91, 54.2, 0.0]      # offset of phantom center relative to origin (in mm)
# the first 65 is because the rotation is about isocenter, but 
#phantom.scale = 10.0                         # re-scale the size of phantom
phantom.projectorNumThreads = 32

# Geometric and energy sampling
physics.energyCount = 24
physics.monochromatic = -1
physics.colSampleCount = 15
physics.rowSampleCount = 15
physics.srcXSampleCount = 15
physics.srcYSampleCount = 15
physics.viewSampleCount = 15
physics.recalcDet = 0
physics.recalcSrc = 0
physics.recalcRayAngle = 0
physics.recalcSpec = 0
physics.recalcFilt = 0
physics.recalcFlux = 0
physics.recalcPht = 0
physics.recalcDet = 0
physics.enableQuantumNoise = 1
physics.enableElectronicNoise = 1
physics.rayAngleCallback = "Detector_RayAngles_2D"
physics.fluxCallback = "Detection_Flux"
physics.scatterCallback = "Scatter_ConvolutionModel"
physics.prefilterCallback = "Detection_prefilter"
physics.crosstalkCallback = "CalcCrossTalk"
physics.col_crosstalk = 0.025
physics.row_crosstalk = 0.02
physics.lagCallback = "Detection_Lag_complex2"
physics.lag_taus = [0.9, 6]
physics.lag_alphas = [0.930, 0.070]
physics.opticalCrosstalkCallback = "CalcOptCrossTalk"
physics.col_crosstalk_opt = 0.04
physics.row_crosstalk_opt = 0.045
physics.DASCallback = "Detection_DAS_complex"
physics.outputCallback = "WriteRawView"
protocol.scanTypes = [1, 1, 1]              # flags for airscan, offset scan, phantom scan

# Table and gantry
protocol.scanTrajectory = "Gantry_Helical"  # name of the function that defines the scanning trajectory and model
protocol.viewsPerRotation = 984            # total numbers of view per rotation
protocol.viewCount = 1084                   # total number of views in scan
protocol.startViewId = 0                    # index of the first view in the scan
protocol.stopViewId = protocol.startViewId+protocol.viewCount-1 # index of the last view in the scan
protocol.airViewCount = 1                   # number of views averaged for air scan
protocol.offsetViewCount = 1                # number of views averaged for offset scan
protocol.rotationTime = 1.0                 # gantry rotation period (in seconds)
protocol.rotationDirection = 1              # gantry rotation direction (1=CW, -1 CCW, seen from table foot-end)
protocol.startAngle = -100*360/984                     # relative to vertical y-axis (n degrees)
protocol.tableSpeed = 0                     # speed of table translation along positive z-axis (in mm/sec)
protocol.startZ = 0                         # start z-position of table
protocol.tiltAngle = 0                      # gantry tilt angle towards negative z-axis (in degrees)
protocol.wobbleDistance = 0.0               # focalspot wobble distance
protocol.focalspotOffset = [0, 0, 0]        # focalspot position offset
protocol.mA = 100                           # tube current (in mA)
protocol.spectrumCallback = "Spectrum"      # name of function that reads and models the X-ray spectrum
protocol.spectrumFilename = "xspect_tar7_80_filt.dat" # name of the spectrum file
protocol.spectrumScaling = 0.931                # scaling factor such that spectrum is in photons / mA / s / mm^2 at 1000 mm
protocol.spectrum_scale_mm = 0              #
protocol.spectrum_scale_mA = 1
#protocol.bowtie = ""       # name of the bowtie file (or [])
protocol.bowtie = "large.txt"   # used BODY FILTER in exps.
protocol.filterCallback = "Xray_Filter"     # name of function to compute additional filtration
protocol.flatFilter = []            # additional filtration - materials and thicknesses (in mm)
#protocol.flatFilter = ['air', 0.001]            # additional filtration - materials and thicknesses (in mm)
protocol.dutyRatio = 1.0                    # tube ON time fraction (for pulsed tubes)

# Reconstruction
recon.fov = 10.0           # diameter of the reconstruction field-of-view (in mm)
recon.imageSize = 256       # number of columns and rows to be reconstructed (square)
recon.sliceCount = 4        # number of slices to reconstruct
recon.sliceThickness = 0.625  # reconstruction inter-slice interval (in mm)
recon.centerOffset = [0.0, 0.0, 0.0] # reconstruction offset relative to center of rotation (in mm)
recon.reconType = 'fdk_equiAngle'    # Name of the recon function to call
recon.kernelType = 'standard'        # 'R-L' for the Ramachandran-Lakshminarayanan (R-L) filter, rectangular window function
                                     # 'S-L' for the Shepp-Logan (S-L) filter, sinc window function
                                     # 'Soft', 'Standard', 'Bone' for kernels similar to those on clinical scanners
recon.startAngle = 0                 # in degrees; 0 is with the X-ray source at the top
recon.unit = 'HU'                    # '/mm', '/cm', or 'HU'
recon.mu = 0.02                      # in /mm; typically around 0.02/mm
recon.huOffset = -1000               # unit is HU, -1000 HU by definition but sometimes something else is preferable
recon.printReconParameters = False   # Flag to print the recon parameters
recon.displayImagePictures = False    # Flag to display the recon results as .png images
recon.saveImagePictureFiles = False   # Flag to save the recon results as .png images
recon.saveImageVolume = True         # Flag to save recon results as one big file
recon.saveSingleImages = False        # Flag to save recon results as individual images

# Scanner geometry
scanner.detectorCallback = "Detector_ThirdgenCurved" # name of function that defines the detector shape and model
scanner.sid = 541.0                         # source-to-iso distance (in mm)
scanner.sdd = 949.075                         # source-to-detector distance (in mm)
scanner.detectorColsPerMod = 1              # number of detector columns per module
scanner.detectorRowsPerMod = 4            # number of detector rows per module
scanner.detectorColOffset = -1.25             # detector column offset relative to centered position (in detector columns)
scanner.detectorRowOffset = 0.0             # detector row offset relative to centered position (in detector rows)
scanner.detectorColSize = 1.0239               # detector column pitch or size (in mm)
scanner.detectorRowSize = 1.098782               # detector row pitch or size (in mm)
scanner.detectorColCount = 888              # total number of detector columns
scanner.detectorRowCount = scanner.detectorRowsPerMod     # total number of detector rows
#scanner.detectorPrefilter = []  # detector filter
scanner.detectorPrefilter = ['air', 0.001]  # detector filter
scanner.focalspotCallback = "SetFocalspot" # name of function that defines the focal spot shape and model
#scanner.focalspotShape = "performix" # name of function that defines the focal spot shape and model
scanner.focalspotData = "/home/dp058565/common/xcist/vct_small_transposed.npz"
scanner.targetAngle = 7.0                   # target angle relative to scanner XY-plane (in degrees)
# NOTE: due to that setfocalspot cannot use a focal spot without zooming, I used a trick here by first setting thresholdsand then run xcist by setting a breakpoint and print W0/L0 of current threshold, so that the scale factoor will be 1. the printed W0/L0 is like this. So threshold does not matter here, as long as W0/L0 are copied here
scanner.focalspotLength = 0.5646668803041932
scanner.focalspotWidth = 0.8974411689872975
#scanner.focalspotWidth = 0
#scanner.focalspotLength = 0
scanner.focalspotWidthThreshold =0.5
scanner.focalspotLengthThreshold =0.5
scanner.detectorMaterial = "Lumex"          # detector sensor material
scanner.detectorDepth = 5.0                 # detector sensor depth (in mm)
scanner.detectionCallback = "Detection_EI_complex"  # name of function that defines the detection process (conversion from X-rays to detector signal)
scanner.detectionGain = 10
scanner.detectorColFillFraction = 0.805       # active fraction of each detector cell in the column direction
scanner.detectorRowFillFraction = 0.891       # active fraction of each detector cell in the row direction
scanner.eNoise = 1000
